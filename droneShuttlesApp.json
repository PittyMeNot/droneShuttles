{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "applicationName": {
      "type": "string",
      "metadata": {
        "description": "The name of the application"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for App Services and MySQL instances"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for App Services and MySQL instances"
      }
    }
  },
  "variables": {
    "appService1Name": "[concat(parameters('applicationName'), '-north')]",
    "appService2Name": "[concat(parameters('applicationName'), '-west')]",
    "appServicePlan1Name": "[concat(variables('appService1Name'), '-plan')]",
    "appServicePlan2Name": "[concat(variables('appService2Name'), '-plan')]"
  },
  "resources": [
    {
      "apiVersion": "2018-11-01",
      "name": "[variables('appServicePlan1Name')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "North Europe",
      "sku": {
        "name": "P1v3",
        "tier": "PremiumV3",
        "size": "P1v3",
        "family": "Pv3",
        "capacity": 1
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "apiVersion": "2018-11-01",
      "name": "[variables('appServicePlan2Name')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "West Europe",
      "sku": {
        "name": "P1v3",
        "tier": "PremiumV3",
        "size": "P1v3",
        "family": "Pv3",
        "capacity": 1
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "apiVersion": "2018-11-01",
      "name": "[variables('appService1Name')]",
      "type": "Microsoft.Web/sites",
      "location": "North Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlan1Name'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlan1Name'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "WEBSITE_CONTAINER_NAME",
              "value": "bitnami/ghost:latest"
            },
            {
              "name": "WEBSITE_CONTAINER_START_TIME_LIMIT",
              "value": "1800"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "true"
            }
          ],
          "linuxFxVersion": "DOCKER|bitnami/ghost:latest"
        },
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "name": "prod",
          "type": "slots",
          "location": "North Europe",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('appService1Name'))]"
          ],
          "properties": {}
        },
        {
          "apiVersion": "2018-11-01",
          "name": "dev",
          "type": "slots",
          "location": "North Europe",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('appService1Name'))]"
          ],
          "properties": {}
        }
      ]
    },
    {
      "apiVersion": "2018-11-01",
      "name": "[variables('appService2Name')]",
      "type": "Microsoft.Web/sites",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlan2Name'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlan2Name'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "WEBSITE_CONTAINER_NAME",
              "value": "bitnami/ghost:latest"
            },
            {
              "name": "WEBSITE_CONTAINER_START_TIME_LIMIT",
              "value": "1800"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "true"
            }
          ],
          "linuxFxVersion": "DOCKER|bitnami/ghost:latest"
        },
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "name": "prod",
          "type": "slots",
          "location": "West Europe",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('appService2Name'))]"
          ],
          "properties": {}
        },
        {
          "apiVersion": "2018-11-01",
          "name": "dev",
          "type": "slots",
          "location": "West Europe",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('appService2Name'))]"
          ],
          "properties": {}
        }
      ]
    },
    {
      "type": "Microsoft.DBforMySQL/servers",
      "apiVersion": "2017-12-01",
      "name": "[variables('mysqlServer1Name')]",
      "location": "North Europe",
      "sku": {
        "name": "GP_Gen5_2",
        "tier": "GeneralPurpose",
        "capacity": 2,
        "family": "Gen5"
      },
      "properties": {
        "version": "5.7",
        "sslEnforcement": "Disabled",
        "createMode": "Default",
        "administratorLogin": "[parameters('adminUsername')]",
        "administratorLoginPassword": "[parameters('adminPassword')]",
        "storageProfile": {
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Enabled",
          "storageMB": 51200
        }
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers",
      "apiVersion": "2017-12-01",
      "name": "[variables('mysqlServer2Name')]",
      "location": "West Europe",
      "sku": {
        "name": "GP_Gen5_2",
        "tier": "GeneralPurpose",
        "capacity": 2,
        "family": "Gen5"
      },
      "properties": {
        "version": "5.7",
        "sslEnforcement": "Disabled",
        "createMode": "GeoRestore",
        "restorePointInTime": "SourceServerCreateTime",
        "sourceServerId": "[resourceId('Microsoft.DBforMySQL/servers', variables('mysqlServer1Name'))]",
        "administratorLogin": "[parameters('adminUsername')]",
        "administratorLoginPassword": "[parameters('adminPassword')]",
        "storageProfile": {
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Enabled",
          "storageMB": 51200
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('appInsights1Name')]",
      "location": "North Europe",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('appInsights1Name')]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('appInsights2Name')]",
      "location": "West Europe",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('appInsights2Name')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-03-01-preview",
      "name": "[variables('logAnalyticsWorkspace1Name')]",
      "location": "North Europe",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-03-01-preview",
      "name": "[variables('logAnalyticsWorkspace2Name')]",
      "location": "West Europe",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[variables('vnet1Name')]",
      "location": "North Europe",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet1",
            "properties": {
              "addressPrefix": "10.0.0.0/27"
            }
          },
          {
            "name": "subnet2",
            "properties": {
              "addressPrefix": "10.0.0.32/27"
            }
          },
          {
            "name": "subnet3",
            "properties": {
              "addressPrefix": "10.0.0.64/27"
            }
          },
          {
            "name": "subnet4",
            "properties": {
              "addressPrefix": "10.0.0.96/27"
            }
          },
          {
            "name": "subnet5",
            "properties": {
              "addressPrefix": "10.0.0.128/27"
            }
          }
        ]
      }
    },
        {
          "type": "Microsoft.ContainerRegistry/registries",
          "apiVersion": "2019-05-01",
          "name": "[parameters('containerRegistryName')]",
          "location": "[parameters('northEuropeLocation')]",
          "sku": {
            "name": "Premium"
          },
          "properties": {
            "adminUserEnabled": true
          }
        },
        {
          "type": "Microsoft.Web/serverfarms",
          "apiVersion": "2020-06-01",
          "name": "[parameters('appFunctionPlanName')]",
          "location": "[parameters('northEuropeLocation')]",
          "sku": {
            "name": "Y1",
            "tier": "Dynamic"
          },
          "properties": {
            "name": "[parameters('appFunctionPlanName')]",
            "workerSizeId": 0,
            "numberOfWorkers": 1
          }
        },
        {
          "type": "Microsoft.Web/sites",
          "apiVersion": "2020-06-01",
          "name": "[parameters('appFunctionName')]",
          "location": "[parameters('northEuropeLocation')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', parameters('appFunctionPlanName'))]"
          ],
          "properties": {
            "name": "[parameters('appFunctionName')]",
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appFunctionPlanName'))]",
            "siteConfig": {
              "appSettings": [
                {}
              ]
            }
          }
        },
        {
          "type": "Microsoft.Storage/storageAccounts",
          "apiVersion": "2021-04-01",
          "name": "[parameters('storageAccountName')]",
          "location": "[parameters('northEuropeLocation')]",
          "sku": {
            "name": "Standard_RAGRS"
          },
          "kind": "StorageV2",
          "properties": {
            "supportsHttpsTrafficOnly": true
          }
        },
        {
          "type": "Microsoft.Network/privateEndpoints",
          "apiVersion": "2020-11-01",
          "name": "[concat(parameters('webAppName1'), '-private-endpoint')]",
          "location": "[parameters('northEuropeLocation')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('webAppName1'))]"
          ],
          "properties": {
            "subnet": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName1'), parameters('privateEndpointSubnetName'))]"
            },
            "privateLinkServiceConnections": [
              {
                "name": "[concat(parameters('webAppName1'), '-private-link-connection')]",
                "properties": {
                  "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('webAppName1'))]",
                  "groupIds": [
                    "sites"
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Microsoft.Network/privateEndpoints",
          "apiVersion": "2020-11-01",
          "name": "[concat(parameters('webAppName2'), '-private-endpoint')]",
          "location": "[parameters('westEuropeLocation')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('webAppName2'))]"
          ],
          "properties": {
            "subnet": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName2'), parameters('privateEndpointSubnetName'))]"
            },
            "privateLinkServiceConnections": [
              {
                "name": "[concat(parameters('webAppName2'), '-private-link-connection')]",
                "properties": {
                  "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('webAppName2'))]",
                  "groupIds": [
                    "sites"
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Microsoft.Web/serverfarms",
          "apiVersion": "2020-06-01",
          "name": "[parameters('functionAppPlanName')]",
          "location": "[parameters('northEuropeLocation')]",
          "sku": {
            "name": "Y1",
            "tier": "Dynamic"
          },
          "properties": {
            "name": "[parameters('functionAppPlanName')]",
            "computeMode": "Dynamic"
          }
        },
        {
          "type": "Microsoft.Web/sites",
          "apiVersion": "2020-06-01",
          "name": "[parameters('functionAppName')]",
          "location": "[parameters('northEuropeLocation')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppPlanName'))]"
          ],
          "properties": {
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppPlanName'))]",
            "siteConfig": {
              "appSettings": [
                {
                  "name": "AzureWebJobsStorage",
                  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-04-01').keys[0].value)]"
                },
                {
                  "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-04-01').keys[0].value)]"
                },
                {
                  "name": "WEBSITE_CONTENTSHARE",
                  "value": "[toLower(parameters('functionAppName'))]"
                },
                {
                  "name": "FUNCTIONS_EXTENSION_VERSION",
                  "value": "~3"
                },
                {
                  "name": "WEBSITE_NODE_DEFAULT_VERSION",
                  "value": "12"
                },
                {
                  "name": "FUNCTIONS_WORKER_RUNTIME",
                  "value": "node"
                }
              ]
            }
          }
        },
        {
          "type": "Microsoft.Storage/storageAccounts",
          "apiVersion": "2021-04-01",
          "name": "[parameters('storageAccountName')]",
          "location": "[parameters('westEuropeLocation')]",
          "sku": {
            "name": "Standard_RAGRS",
            "tier": "Standard"
          },
          "kind": "StorageV2",
          "properties": {
            "supportsHttpsTrafficOnly": true,
            "networkAcls": {
              "bypass": "AzureServices",
              "defaultAction": "Deny",
              "ipRules": [],
              "virtualNetworkRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('vNet1Name')), '/subnets/', parameters('subnetName1'))]",
                  "action": "Allow"
                },
                {
                  "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('vNet2Name')), '/subnets/', parameters('subnetName1'))]",
                  "action": "Allow"
                }
              ]
            },
            "encryption": {
              "services": {
                "file": {
                  "enabled": true
                },
                "blob": {
                  "enabled": true
                }
              },
              "keySource": "Microsoft.Storage"
            }
          }
        },
        {
          "type": "Microsoft.Network/virtualNetworks",
          "apiVersion": "2021-02-01",
          "name": "[parameters('vNetNameWestEurope')]",
          "location": "[parameters('westEuropeLocation')]",
          "properties": {
            "addressSpace": {
              "addressPrefixes": [
                "172.16.0.0/16"
              ]
            },
            "subnets": [
              {
                "name": "Subnet-1",
                "properties": {
                  "addressPrefix": "172.16.0.0/27"
                }
              },
              {
                "name": "Subnet-2",
                "properties": {
                  "addressPrefix": "172.16.0.32/27"
                }
              },
              {
                "name": "Subnet-3",
                "properties": {
                  "addressPrefix": "172.16.0.64/27"
                }
              },
              {
                "name": "Subnet-4",
                "properties": {
                  "addressPrefix": "172.16.0.96/27"
                }
              },
              {
                "name": "Subnet-5",
                "properties": {
                  "addressPrefix": "172.16.0.128/27"
                }
              }
            ]
          }
        },
        {
          "type": "Microsoft.Network/networkSecurityGroups",
          "apiVersion": "2021-02-01",
          "name": "[parameters('nsgNameNorthEurope')]",
          "location": "[parameters('northEuropeLocation')]",
          "properties": {
            "securityRules": [
              // Add your necessary security rules here
              
            ]
          }
        },
        {
          "type": "Microsoft.Network/networkSecurityGroups",
          "apiVersion": "2021-02-01",
          "name": "[parameters('nsgNameWestEurope')]",
          "location": "[parameters('westEuropeLocation')]",
          "properties": {
            "securityRules": [
              // Add your necessary security rules here
            ]
          }
        },
        {
          "type": "Microsoft.Network/applicationGateways",
          "apiVersion": "2021-03-01",
          "name": "[parameters('applicationGatewayName')]",
          "location": "[parameters('northEuropeLocation')]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetNorthEuropeName'))]",
            "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
          ],
          "properties": {
            "sku": {
              "name": "Standard_v2",
              "tier": "Standard_v2"
            },
            "gatewayIPConfigurations": [
              {
                "name": "appGatewayIpConfig",
                "properties": {
                  "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetNorthEuropeName'), parameters('gatewaySubnetName'))]"
                  }
                }
              }
            ],
            "frontendIPConfigurations": [
              {
                "name": "appGatewayFrontendIP",
                "properties": {
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
                  }
                }
              }
            ],
            "frontendPorts": [
              {
                "name": "appGatewayFrontendPort80",
                "properties": {
                  "port": 80
                }
              },
              {
                "name": "appGatewayFrontendPort443",
                "properties": {
                  "port": 443
                }
              }
            ],
            "backendAddressPools": [
              // Add backend address pool configurations here
            ],
            "backendHttpSettingsCollection": [
              // Add backend HTTP settings here
            ],
            "httpListeners": [
              // Add HTTP listeners here
            ],
            "urlPathMaps": [
              // Add URL path maps here
            ],
            "requestRoutingRules": [
              // Add request routing rules here
            ],
            "webApplicationFirewallConfiguration": {
              "enabled": true,
              "firewallMode": "Detection",
              "ruleSetType": "OWASP",
              "ruleSetVersion": "3.1"
            }
          }
        },
        {
          "type": "Microsoft.Network/frontDoors",
          "apiVersion": "2020-01-01",
          "name": "[parameters('frontDoorName')]",
          "location": "global",
          "properties": {
            "routingRules": [
              {
                "name": "httpToHttpsRedirect",
                "properties": {
                  "frontendEndpoints": [
                    {
                      "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('frontDoorName'), parameters('frontDoorFrontendEndpointName'))]"
                    }
                  ],
                  "acceptedProtocols": [
                    "Http"
                  ],
                  "patternsToMatch": [
                    "/*"
                  ],
                  "enabledState": "Enabled",
                  "routeConfiguration": {
                    "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration",
                    "redirectType": "Found",
                    "redirectProtocol": "HttpsOnly",
                    "customPath": "/{urlPath}"
                  }
                }
              },
              {
                "name": "appGatewayRouting",
                "properties": {
                  "frontendEndpoints": [
                    {
                      "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('frontDoorName'), parameters('frontDoorFrontendEndpointName'))]"
                    }
                  ],
                  "acceptedProtocols": [
                    "Https"
                  ],
                  "patternsToMatch": [
                    "/*"
                  ],
                  "enabledState": "Enabled",
                  "routeConfiguration": {
                    "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                    "backendPool": {
                      "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', parameters('frontDoorName'), parameters('frontDoorBackendPoolName'))]"
                    }
                  }
                }
              }
            ],
            "frontendEndpoints": [
              {
                "name": "[parameters('frontDoorFrontendEndpointName')]",
                "properties": {
                  "hostName": "[concat(parameters('frontDoorName'), '.azurefd.net')]",
                  "sessionAffinityEnabledState": "Disabled",
                  "webApplicationFirewallPolicyLink": {
                    "id": "" // Add the link to the WAF policy if needed
                  }
                }
              }
            ],
            "backendPools": [
              {
                "name": "[parameters('frontDoorBackendPoolName')]",
                "properties": {
                  "backends": [
                    {
                      "address": "[concat(parameters('applicationGatewayName'), '.', parameters('northEuropeLocation'), '.cloudapp.azure.com')]",
                      "httpPort": 80,
                      "httpsPort": 443,
                      "weight": 50,
                      "priority": 1,
                      "backendHostHeader": "[concat(parameters('applicationGatewayName'), '.', parameters('northEuropeLocation'), '.cloudapp.azure.com')]"
                    }
                  ],
                  "loadBalancingSettings": {
                    "name": "defaultLoadBalancingSettings",
                    "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('frontDoorName'), 'defaultLoadBalancingSettings')]"
                  },
                  "healthProbeSettings": {
                    "name": "defaultHealthProbeSettings",
                    "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('frontDoorName'), 'defaultHealthProbeSettings')]"
                  }
                }
              }
            ],
            "healthProbeSettingsCollection": [
              {
                "name": "defaultHealthProbeSettings",
                "properties": {
                  "path": "/",
                  "protocol": "Https",
                  "intervalInSeconds": 30,
                  "healthProbeMethod": "HEAD",
                  "enabledState": "Enabled"
                }
              }
            ],
            "loadBalancingSettingsCollection": [
              {
                "name": "defaultLoadBalancingSettings",
                "properties": {
                  "sampleSize": 4,
                  "successfulSamplesRequired": 2,
                  "additionalLatencyMilliseconds": 0,
                  "enabledState": "Enabled"
                }
              }
            ],
            "backendPoolsSettings": {
              "enforceCertificateNameCheck": "Enabled",
              "sendRecvTimeoutSeconds": 30
            },
            "enabledState": "Enabled"
          }
        }
  ]
}
